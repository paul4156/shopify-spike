{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Layout, Page, FooterHelp, Card, Link, Button, FormLayout, TextField, AccountConnection, ChoiceList, SettingToggle } from '@shopify/polaris';\nimport { ImportMinor } from '@shopify/polaris-icons';\nexport default function App() {\n  _s();\n\n  var _useState = useState(''),\n      first = _useState[0],\n      setFirst = _useState[1];\n\n  var _useState2 = useState(''),\n      last = _useState2[0],\n      setLast = _useState2[1];\n\n  var _useState3 = useState(''),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var _useState4 = useState([]),\n      checkboxes = _useState4[0],\n      setCheckboxes = _useState4[1];\n\n  var _useState5 = useState(false),\n      connected = _useState5[0],\n      setConnected = _useState5[1];\n\n  var handleFirstChange = useCallback(function (value) {\n    return setFirst(value);\n  }, []);\n  var handleLastChange = useCallback(function (value) {\n    return setLast(value);\n  }, []);\n  var handleEmailChange = useCallback(function (value) {\n    return setEmail(value);\n  }, []);\n  var handleCheckboxesChange = useCallback(function (value) {\n    return setCheckboxes(value);\n  }, []);\n  var toggleConnection = useCallback(function () {\n    setConnected(!connected);\n  }, [connected]);\n  var breadcrumbs = [{\n    content: 'Sample apps'\n  }, {\n    content: 'next.js'\n  }];\n  var primaryAction = {\n    content: 'New product'\n  };\n  var secondaryActions = [{\n    content: 'Import',\n    icon: ImportMinor\n  }];\n  var choiceListItems = [{\n    label: 'I accept the Terms of Service',\n    value: 'false'\n  }, {\n    label: 'I consent to receiving emails',\n    value: 'false2'\n  }];\n  var accountSectionDescription = connected ? 'Disconnect your account from your Shopify store.' : 'Connect your account to your Shopify store.';\n  var accountMarkup = connected ? __jsx(DisconnectAccount, {\n    onAction: toggleConnection\n  }) : __jsx(ConnectAccount, {\n    onAction: toggleConnection\n  });\n  return __jsx(Page, {\n    title: \"Polaris\",\n    breadcrumbs: breadcrumbs,\n    primaryAction: primaryAction,\n    secondaryActions: secondaryActions\n  }, __jsx(Layout, null, __jsx(Layout.AnnotatedSection, {\n    title: \"Style\",\n    description: \"Customize the style of your checkout\"\n  }, __jsx(SettingToggle, {\n    action: {\n      content: 'Customize Checkout'\n    }\n  }, \"Upload your store\\u2019s logo, change colors and fonts, and more.\")), __jsx(Layout.AnnotatedSection, {\n    title: \"Account\",\n    description: accountSectionDescription\n  }, accountMarkup), __jsx(Layout.AnnotatedSection, {\n    title: \"Form\",\n    description: \"A sample form using Polaris components.\"\n  }, __jsx(Card, {\n    sectioned: true\n  }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n    value: first,\n    label: \"First name\",\n    placeholder: \"Tom\",\n    onChange: handleFirstChange,\n    autoComplete: \"given-name\"\n  }), __jsx(TextField, {\n    value: last,\n    label: \"Last name\",\n    placeholder: \"Ford\",\n    onChange: handleLastChange,\n    autoComplete: \"family-name\"\n  })), __jsx(TextField, {\n    value: email,\n    label: \"Email\",\n    placeholder: \"example@email.com\",\n    onChange: handleEmailChange,\n    autoComplete: \"email\"\n  }), __jsx(ChoiceList, {\n    allowMultiple: true,\n    choices: choiceListItems,\n    selected: checkboxes,\n    onChange: handleCheckboxesChange\n  }), __jsx(Button, {\n    primary: true\n  }, \"Submit\")))), __jsx(Layout.Section, null, __jsx(FooterHelp, null, \"For more details on Polaris, visit our\", ' ', __jsx(Link, {\n    url: \"https://polaris.shopify.com\"\n  }, \"style guide\"), \".\"))));\n}\n\n_s(App, \"BVFOChaMzbDn5A4GqCG6aPe37N0=\");\n\n_c = App;\n\nfunction ConnectAccount(_ref) {\n  var onAction = _ref.onAction;\n  return __jsx(AccountConnection, {\n    action: {\n      content: 'Connect',\n      onAction: onAction\n    },\n    details: \"No account connected\",\n    termsOfService: __jsx(\"p\", null, \"By clicking Connect, you are accepting Sample\\u2019s\", ' ', __jsx(Link, {\n      url: \"https://polaris.shopify.com\"\n    }, \"Terms and Conditions\"), \", including a commission rate of 15% on sales.\")\n  });\n}\n\n_c2 = ConnectAccount;\n\nfunction DisconnectAccount(_ref2) {\n  var onAction = _ref2.onAction;\n  return __jsx(AccountConnection, {\n    connected: true,\n    action: {\n      content: 'Disconnect',\n      onAction: onAction\n    },\n    accountName: \"Tom Ford\",\n    title: __jsx(Link, {\n      url: \"http://google.com\"\n    }, \"Tom Ford\"),\n    details: \"Account id: d587647ae4\"\n  });\n}\n\n_c3 = DisconnectAccount;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ConnectAccount\");\n$RefreshReg$(_c3, \"DisconnectAccount\");","map":{"version":3,"sources":["/Users/liang.wang/Documents/Project/shopify-spike/pages/index.js"],"names":["React","useState","useCallback","Layout","Page","FooterHelp","Card","Link","Button","FormLayout","TextField","AccountConnection","ChoiceList","SettingToggle","ImportMinor","App","first","setFirst","last","setLast","email","setEmail","checkboxes","setCheckboxes","connected","setConnected","handleFirstChange","value","handleLastChange","handleEmailChange","handleCheckboxesChange","toggleConnection","breadcrumbs","content","primaryAction","secondaryActions","icon","choiceListItems","label","accountSectionDescription","accountMarkup","ConnectAccount","onAction","DisconnectAccount"],"mappings":"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","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport {\n  Layout,\n  Page,\n  FooterHelp,\n  Card,\n  Link,\n  Button,\n  FormLayout,\n  TextField,\n  AccountConnection,\n  ChoiceList,\n  SettingToggle,\n} from '@shopify/polaris';\nimport {ImportMinor} from '@shopify/polaris-icons';\n\nexport default function App() {\n  const [first, setFirst] = useState('');\n  const [last, setLast] = useState('');\n  const [email, setEmail] = useState('');\n  const [checkboxes, setCheckboxes] = useState([]);\n  const [connected, setConnected] = useState(false);\n\n  const handleFirstChange = useCallback((value) => setFirst(value), []);\n  const handleLastChange = useCallback((value) => setLast(value), []);\n  const handleEmailChange = useCallback((value) => setEmail(value), []);\n  const handleCheckboxesChange = useCallback(\n    (value) => setCheckboxes(value),\n    [],\n  );\n\n  const toggleConnection = useCallback(() => {\n    setConnected(!connected);\n  }, [connected]);\n\n  const breadcrumbs = [{content: 'Sample apps'}, {content: 'next.js'}];\n  const primaryAction = {content: 'New product'};\n  const secondaryActions = [{content: 'Import', icon: ImportMinor}];\n\n  const choiceListItems = [\n    {label: 'I accept the Terms of Service', value: 'false'},\n    {label: 'I consent to receiving emails', value: 'false2'},\n  ];\n\n  const accountSectionDescription = connected\n    ? 'Disconnect your account from your Shopify store.'\n    : 'Connect your account to your Shopify store.';\n\n  const accountMarkup = connected ? (\n    <DisconnectAccount onAction={toggleConnection} />\n  ) : (\n    <ConnectAccount onAction={toggleConnection} />\n  );\n\n  return (\n    <Page\n      title=\"Polaris\"\n      breadcrumbs={breadcrumbs}\n      primaryAction={primaryAction}\n      secondaryActions={secondaryActions}\n    >\n      <Layout>\n        <Layout.AnnotatedSection\n          title=\"Style\"\n          description=\"Customize the style of your checkout\"\n        >\n          <SettingToggle\n            action={{\n              content: 'Customize Checkout',\n            }}\n          >\n            Upload your store’s logo, change colors and fonts, and more.\n          </SettingToggle>\n        </Layout.AnnotatedSection>\n\n        <Layout.AnnotatedSection\n          title=\"Account\"\n          description={accountSectionDescription}\n        >\n          {accountMarkup}\n        </Layout.AnnotatedSection>\n\n        <Layout.AnnotatedSection\n          title=\"Form\"\n          description=\"A sample form using Polaris components.\"\n        >\n          <Card sectioned>\n            <FormLayout>\n              <FormLayout.Group>\n                <TextField\n                  value={first}\n                  label=\"First name\"\n                  placeholder=\"Tom\"\n                  onChange={handleFirstChange}\n                  autoComplete=\"given-name\"\n                />\n                <TextField\n                  value={last}\n                  label=\"Last name\"\n                  placeholder=\"Ford\"\n                  onChange={handleLastChange}\n                  autoComplete=\"family-name\"\n                />\n              </FormLayout.Group>\n\n              <TextField\n                value={email}\n                label=\"Email\"\n                placeholder=\"example@email.com\"\n                onChange={handleEmailChange}\n                autoComplete=\"email\"\n              />\n\n              <ChoiceList\n                allowMultiple\n                choices={choiceListItems}\n                selected={checkboxes}\n                onChange={handleCheckboxesChange}\n              />\n\n              <Button primary>Submit</Button>\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n\n        <Layout.Section>\n          <FooterHelp>\n            For more details on Polaris, visit our{' '}\n            <Link url=\"https://polaris.shopify.com\">style guide</Link>.\n          </FooterHelp>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\nfunction ConnectAccount({onAction}) {\n  return (\n    <AccountConnection\n      action={{content: 'Connect', onAction}}\n      details=\"No account connected\"\n      termsOfService={\n        <p>\n          By clicking Connect, you are accepting Sample’s{' '}\n          <Link url=\"https://polaris.shopify.com\">Terms and Conditions</Link>,\n          including a commission rate of 15% on sales.\n        </p>\n      }\n    />\n  );\n}\n\nfunction DisconnectAccount({onAction}) {\n  return (\n    <AccountConnection\n      connected\n      action={{content: 'Disconnect', onAction}}\n      accountName=\"Tom Ford\"\n      title={<Link url=\"http://google.com\">Tom Ford</Link>}\n      details=\"Account id: d587647ae4\"\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}